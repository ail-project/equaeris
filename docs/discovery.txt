parse_nmap(): returns a list containing all open ports, given an nmap xml file
	Arguments:
		string nmapfile - The path of the nmap xml file
	Returns:
		A list containing all open port numbers


database_check(): checks dictionary of targeted services if anyone of them is open and returns the concerned services
	Arguments:
		list open_ports - A list containing all open port numbers
	Returns:
	    A dictionary with services mapped to ports
	    format: {"service_name": "port"}
	Further requirements:
		A ports.json file that contains the targeted services
		format:
		{"port_number":"service_name",...}


bucket_access_test(): tries to access an amazon s3 bucket
    Arguments:
        string bucketname - The name of the bucket
    Returns:
        True or False, based on whether the bucket is freely accessible or not
    Raises:
        DatabaseConnectionError if no bucket of specified name can be found


access_test(): tries to access a database using predefined commands
	Arguments:
		string service - The name of the targeted service
		boolean aggressive - if set, function will try to access password protected database using predefined credentials
		string ip - The ip at which the targeted database resides
		string port - The port on which the targeted database runs
	Returns:
		Tuple where first element is a boolean: if true, database is accessible
							if false, database is not accessible
		   second element is a list of strings: contains either username and password, only password or is None if nothing has been found
    Raises:
        DatabaseConnectionError if no database can be found at the specified address


automatic_discovery(): automatically tries to access all databases present on one server
    Arguments:
        string nmap_file - The path of the nmap xml file
        string ip - The ip at which the targeted server resides
        boolean aggressive - if set, function will try to access password protected database using predefined credentials
    Returns:
        dictionary with the detailed results of each access try
        format: {"service_name":("port",(boolean access_achieved,[credentials])), ...}
    Further requirements:
        Same as database_check